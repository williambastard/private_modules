{"version":3,"sources":["../src/api_parser/api_parser.ts","../src/api_parser/api_constantes.ts","../src/api_fetcher/api_fetcher.ts","../src/index.ts"],"sourcesContent":["import { Response } from \"express\";\r\nimport ApiInterface from \"./api_interface\";\r\n\r\nexport class ApiConstructor {\r\n    _response!: Response;\r\n    _responseAPI?: ApiInterface;\r\n\r\n    constructor(_response: Response) {\r\n        this._response = _response\r\n        return this;\r\n    }\r\n    setResponse(_responseAPI: ApiInterface) {\r\n        this._responseAPI = _responseAPI;\r\n        return this;\r\n    }\r\n    sendResponse() {\r\n        return this._response.status(this._responseAPI!.statusCode).json(this._responseAPI);\r\n    }\r\n}","import ApiInterface from \"./api_interface\";\r\nexport abstract class ApiResponseMap {\r\n    static map: Map<string, Object> = new Map([\r\n        [\"HTTP_400\", { statusCode: 400, message: \"Bad Request\" }],\r\n        [\"HTTP_401\", { statusCode: 401, message: \"Unauthorized\" }],\r\n        [\"HTTP_402\", { statusCode: 402, message: \"Payment Required\" }],\r\n        [\"HTTP_403\", { statusCode: 403, message: \"Forbidden\" }],\r\n        [\"HTTP_404\", { statusCode: 404, message: \"Not Found\" }],\r\n        [\"HTTP_405\", { statusCode: 405, message: \"Not Allowed\" }],\r\n        [\"HTTP_406\", { statusCode: 406, message: \"Not Acceptable\" }],\r\n        [\"HTTP_407\", { statusCode: 407, message: \"Proxy Authentication required\" }],\r\n        [\"HTTP_498\", { statusCode: 498, message: \"Token expired / invalid\" }],\r\n\r\n        [\"HTTP_500\", { statusCode: 500, message: \"Internal Server Error\" }],\r\n        [\"HTTP_501\", { statusCode: 501, message: \"Not Implemented\" }],\r\n        [\"HTTP_502\", { statusCode: 502, message: \"Bad Gateway\" }],\r\n        [\"HTTP_503\", { statusCode: 503, message: \"Service Unavailable\" }],\r\n        [\"HTTP_504\", { statusCode: 504, message: \"Gateway Timeout\" }],\r\n\r\n        [\"HTTP_200\", { statusCode: 200, message: \"Success\", data: {} }],\r\n        [\"HTTP_201\", { statusCode: 201, message: \"Created\", data: {} }],\r\n        [\"HTTP_202\", { statusCode: 202, message: \"Accepted\", data: {} }],\r\n        [\"HTTP_204\", { statusCode: 204, message: \"No Content\", data: {} }],\r\n        [\"HTTp_205\", { statusCode: 205, message: \"Reset Content\", data: {} }],\r\n        [\"HTTP_206\", { statusCode: 206, message: \"Partial Content\", data: {} }],\r\n        [\"HTTP_208\", { statusCode: 208, message: \"Already Reported\", data: {} }],\r\n        [\"ERROR\", { statusCode: 500, message: \"\\\"{CODE}\\\" Not found in default ApiDefaultResponse\", data: {} }],\r\n    ])\r\n}\r\nexport default abstract class ApiJSON implements ApiInterface {\r\n    statusCode!: number;\r\n    message!: string;\r\n    token?: string | undefined;\r\n    data?: object | undefined;\r\n    details?: unknown;\r\n\r\n\r\n    static get(key: string): ApiInterface {\r\n        const error = JSON.parse(JSON.stringify(ApiResponseMap.map.get(\"ERROR\")!)).message.replace(\"{CODE}\", key);\r\n        const get = ApiResponseMap.map.get(key) ?? error;\r\n        return get as ApiInterface;\r\n    }\r\n}","import { Request } from \"express\";\r\nimport { ApiFetcherInterface } from \"./api_fetcher.interface\";\r\nimport ApiDefaultResponse from \"../api_parser/api_constantes\";\r\nimport ApiInterface from \"../api_parser/api_interface\";\r\n\r\nexport default class Call implements ApiFetcherInterface {\r\n    _request: Request;\r\n    _headers: Headers = new Headers();\r\n    _options: Object = {};\r\n    _data: any | false = false;\r\n    _session: any | false = false;\r\n    _status: number = 500;\r\n    _isOK: boolean = false;\r\n    _callresponse: any = new Map();\r\n\r\n    constructor(_request: Request, _mstarget: string, _msendpoint: string) {\r\n        this._request = _request;\r\n        this.initHeader(_mstarget, _msendpoint);\r\n    }\r\n    async fetch(): Promise<Call> {\r\n        this.getFetchOptions();\r\n        const response = await fetch(`${this.getTarget()}`, this._options)\r\n        const _ms_response = await response.json();\r\n        const _ms_user_data = _ms_response!.data ?? false;\r\n        const _ms_user_session = _ms_user_data!.session ?? false;\r\n        this.setIsOK(response.ok);\r\n        this.setStatus(response.status);\r\n        this.setCallResponse(_ms_response);\r\n        this.setSession(_ms_user_session);\r\n        this.setData(_ms_user_data);\r\n        return this;\r\n    }\r\n\r\n    setStatus(_status: number) {\r\n        this._status = _status\r\n    }\r\n    setIsOK(_isOK: boolean) {\r\n        this._isOK = _isOK\r\n    }\r\n\r\n    setSession(_session: any | false) {\r\n        this._session = _session;\r\n    }\r\n\r\n    setCallResponse(_callresponse: any) {\r\n        this._callresponse = _callresponse;\r\n    }\r\n\r\n    setData(_data: any | false) {\r\n        this._data = _data;\r\n    }\r\n\r\n    setHeaderKey(headerKey: string, headerValue: string) {\r\n        headerKey = headerKey.toLowerCase();\r\n        headerKey = headerKey.split('-')\r\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n            .join('-');\r\n        this._headers.append(headerKey, headerValue);\r\n    }\r\n\r\n    getHeaderKey(_headerKey: string) {\r\n        const _returnHeader = this._headers.get(_headerKey)?.split('-')\r\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n            .join('-');\r\n        return _returnHeader;\r\n    }\r\n\r\n    getToken(): string {\r\n        return this._request.get('Token') ?? \"\";\r\n    }\r\n\r\n    getOrigin(): string {\r\n        return this._request.get('Origin') ?? \"\";\r\n    }\r\n\r\n    getFetchOptions(): RequestInit {\r\n        this.initFetchOptions();\r\n        return this._options as RequestInit\r\n    }\r\n\r\n    getTarget() {\r\n        return this.getHeaderKey(\"ms-target-protocol\") +\r\n            \"://\" + this.getHeaderKey(\"ms-target-service\") +\r\n            \".\" + this.getHeaderKey(\"ms-target-host\") +\r\n            \"/\" + this.getHeaderKey(\"ms-target-service\") +\r\n            \"/\" + this.getHeaderKey('ms-target-endpoint');\r\n    }\r\n\r\n    initFetchOptions() {\r\n        if ([\"POST\", \"PATCH\", \"PUT\", \"DELETE\"].includes(this._request.method)) {\r\n            Object.assign(this._options, {\r\n                \"headers\": this._headers,\r\n                \"method\": this._request.method,\r\n                \"body\": JSON.stringify(this._request.body)\r\n\r\n            });\r\n        } else {\r\n            Object.assign(this._options, {\r\n                \"headers\": this._headers,\r\n                \"method\": this._request.method\r\n            });\r\n        }\r\n    }\r\n    initHeader(_mstarget: string, _msendpoint: string) {\r\n        this.setHeaderKey('origin', this.getOrigin());\r\n        this.setHeaderKey('token', this.getToken());\r\n        this.setHeaderKey('credentials', 'include');\r\n        this.setHeaderKey('author', 'William BASTARD');\r\n        this.setHeaderKey('content-type', 'application/json');\r\n        this.setHeaderKey('accept', 'application/json');\r\n\r\n        this.setHeaderKey('ms-user-method', this._request.method);\r\n        this.setHeaderKey('ms-target-service', _mstarget);\r\n        this.setHeaderKey('ms-target-protocol', 'http');\r\n        this.setHeaderKey('ms-target-host', 'service.riptest:8282');\r\n        this.setHeaderKey('ms-target-endpoint', _msendpoint);\r\n    }\r\n}","import { ApiConstructor } from \"./api_parser/api_parser\"\r\nimport ApiJSON from \"./api_parser/api_constantes\"\r\nimport Call from \"./api_fetcher/api_fetcher\"\r\n\r\nexport default { ApiConstructor, Call, ApiJSON };"],"mappings":"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","names":[]}